{
  "name": "reddytalk-ai-comprehensive",
  "version": "2.0.0",
  "description": "Complete ReddyTalk.ai medical AI platform with authentication, patient management, call recording, live transcripts, and training data collection",
  "main": "src/app-comprehensive.js",
  "scripts": {
    "start": "node src/app-comprehensive.js",
    "dev": "nodemon src/app-comprehensive.js --watch src",
    "dev:debug": "DEBUG=* nodemon src/app-comprehensive.js --watch src",
    
    "test": "jest",
    "test:unit": "jest tests/unit --coverage",
    "test:integration": "jest tests/integration",
    "test:e2e": "jest tests/e2e",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage --collectCoverageFrom='src/**/*.js'",
    
    "db:setup": "node scripts/setup-database.js",
    "db:seed": "node scripts/seed-database.js", 
    "db:migrate": "node scripts/migrate-database.js",
    "db:backup": "node scripts/backup-database.js",
    "db:restore": "node scripts/restore-database.js",
    
    "auth:test": "node tests/auth-test.js",
    "patients:test": "node tests/patient-test.js",
    "calls:test": "node tests/call-test.js",
    "training:test": "node tests/training-test.js",
    
    "mcp:start": "node src/mcp/enhanced-server.js",
    "mcp:test": "node test-mcp-simple.js",
    "mcp:basic": "node src/mcp/server.js",
    
    "voice:test": "node testVoicePipeline.js",
    "elevenlabs:test": "node tests/elevenlabs-test.js",
    
    "services:health": "node scripts/health-check.js",
    "services:restart": "node scripts/restart-services.js",
    
    "deploy:dev": "npm run db:migrate && npm run test && npm start",
    "deploy:staging": "NODE_ENV=staging npm run db:migrate && npm run test && npm start",
    "deploy:prod": "NODE_ENV=production npm run db:migrate && npm start",
    
    "docker:build": "docker build -t reddytalk-ai:latest .",
    "docker:run": "docker run -p 8080:8080 --env-file .env reddytalk-ai:latest",
    "docker:compose": "docker-compose up -d",
    
    "lint": "eslint src/ tests/ --fix",
    "lint:check": "eslint src/ tests/",
    "format": "prettier --write src/ tests/ frontend/src/",
    "format:check": "prettier --check src/ tests/ frontend/src/",
    
    "security:audit": "npm audit && node scripts/security-scan.js",
    "security:fix": "npm audit fix",
    
    "logs:view": "tail -f logs/app.log",
    "logs:clear": "rm -rf logs/*.log",
    
    "backup:full": "node scripts/full-backup.js",
    "backup:data": "node scripts/backup-data.js",
    
    "analytics:generate": "node scripts/generate-analytics.js",
    "reports:daily": "node scripts/daily-report.js",
    "reports:weekly": "node scripts/weekly-report.js",
    
    "training:collect": "node scripts/collect-training-data.js",
    "training:process": "node scripts/process-training-data.js",
    "training:export": "node scripts/export-training-dataset.js",
    
    "hipaa:audit": "node scripts/hipaa-compliance-check.js",
    "hipaa:report": "node scripts/generate-hipaa-report.js",
    
    "performance:test": "node scripts/performance-test.js",
    "load:test": "artillery run tests/load/load-test.yml"
  },
  "keywords": [
    "ai",
    "healthcare",
    "medical",
    "voice",
    "receptionist",
    "twilio",
    "elevenlabs", 
    "azure",
    "hipaa",
    "clinic",
    "appointments",
    "transcription",
    "training-data",
    "machine-learning",
    "nodejs",
    "express",
    "postgresql",
    "websocket",
    "real-time"
  ],
  "author": "ReddyTalk.ai Team <team@reddytalk.ai>",
  "license": "PROPRIETARY",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@azure/communication-calling": "^1.38.1",
    "@azure/communication-identity": "^1.3.1",
    "@azure/communication-phone-numbers": "^1.5.0",
    "@azure/identity": "^4.12.0",
    "@azure/keyvault-secrets": "^4.10.0",
    "@azure/openai": "^1.0.0-beta.13",
    "@azure/service-bus": "^7.9.5",
    "@azure/storage-blob": "^12.28.0",
    "@deepgram/sdk": "^4.11.2",
    "@fastify/cors": "^8.5.0",
    "@fastify/helmet": "^11.1.1", 
    "@fastify/rate-limit": "^8.1.1",
    "@fastify/websocket": "^8.3.1",
    "@google-cloud/speech": "^6.2.0",
    "@modelcontextprotocol/sdk": "^1.18.0",
    "@prisma/client": "^5.22.0",
    "aws-sdk": "^2.1547.0",
    "axios": "^1.12.0",
    "bcryptjs": "^2.4.3",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "dotenv": "^16.6.1",
    "express": "^4.21.2",
    "express-rate-limit": "^7.5.1",
    "express-validator": "^7.0.1",
    "ffmpeg": "^0.0.4",
    "fluent-ffmpeg": "^2.1.2",
    "helmet": "^7.2.0",
    "jsonwebtoken": "^9.0.2",
    "microsoft-cognitiveservices-speech-sdk": "^1.45.0",
    "natural": "^6.12.0",
    "openai": "^4.104.0",
    "opentelemetry": "^0.1.0",
    "pg": "^8.16.3",
    "pino": "^8.21.0",
    "pino-pretty": "^10.3.1",
    "redis": "^4.7.1",
    "socket.io": "^4.7.5",
    "twilio": "^4.23.0",
    "uuid": "^9.0.1",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@types/node": "^20.19.13",
    "artillery": "^2.0.0",
    "eslint": "^8.57.1",
    "jest": "^29.7.0",
    "nodemon": "^3.1.10",
    "prettier": "^3.6.2",
    "supertest": "^6.3.4",
    "typescript": "^5.9.2"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/app*.js",
      "!src/**/*.test.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ]
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es2021": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended"
    ],
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
    },
    "rules": {
      "no-unused-vars": "warn",
      "no-console": "off",
      "prefer-const": "error",
      "no-var": "error"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2
  },
  "nodemonConfig": {
    "watch": [
      "src/"
    ],
    "ext": "js,json",
    "ignore": [
      "src/**/*.test.js",
      "node_modules/",
      "logs/",
      "storage/"
    ],
    "env": {
      "NODE_ENV": "development"
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/reddytalk-ai.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/reddytalk-ai/issues"
  },
  "homepage": "https://reddytalk.ai",
  "funding": {
    "type": "private"
  },
  "config": {
    "port": "8080",
    "host": "0.0.0.0"
  }
}